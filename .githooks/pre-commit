#!/bin/bash

export PATH=$PATH:$HOME/go/bin

# Symbol Vars
INFO='[INFO]'
CHECK='[OK]'
CROSS='[NOT OK]'

# Color Vars
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

PASS=true

usage="

simple git hook to make your code is good :)\n${GREEN}
  _____     _                 _
 |_   _| __(_)___ _ __  _   _| |
   | || '__| / __| '_ \| | | | |
   | || |  | \__ \ | | | |_| | |
   |_||_|  |_|___/_| |_|\__,_|_|
${NC}\n
${RED}*NB) Do not edit this to cheat!${NC}\n\n"

printf "%s$usage"

printf "%s${GREEN}${INFO} Executing git hook...${NC}\n\n"

## Retrieve all of the .go files that have been changed since the last commit
STAGED_GO_FILES=$(git diff --cached --name-only -- '*.go')

## Check staged if this is empty
if [[ $STAGED_GO_FILES == "" ]]; then
  printf "%s${YELLOW}${INFO} No go files ...${NC}\n\n"
  exit 0
fi

## Loop staged files
for FILE in $STAGED_GO_FILES; do

  printf "%s${YELLOW}${INFO} Checking and formatting ${FILE}${NC}\n"

  # go fmt
  printf "${BLUE}${INFO} %-20s\n" "Executing go fmt"
  go fmt "$FILE"

  # goimports
  printf "${BLUE}${INFO} %-20s\n" "Executing goimports"
  goimports -w "$FILE"

  # golint
  # shellcheck disable=SC2046
  printf "${BLUE}${INFO} %-20s" "Executing golint"
  LIN_RESULT=$(golint "$FILE")
  if [[ ${LIN_RESULT} != "" ]]; then
    printf "${RED}%50s${NC}\n" "[NOT PASSED]"
    printf "%s\n" "${LIN_RESULT}"
    PASS=false
  else
    printf "${GREEN}%50s${NC}\n" "[PASSED]"
  fi

  # gocyclo
  # shellcheck disable=SC2046
  printf "${BLUE}${INFO} %-20s" "Executing gocyclo"
  CYCLO_RESULT=$(gocyclo -over 15 "${FILE}")
  if [[ ${CYCLO_RESULT} != "" ]]; then
    printf "${RED}%50s${NC}\n" "[NOT PASSED]"
    printf "%s\n" "${CYCLO_RESULT}"
    PASS=false
  else
    printf "${GREEN}%50s${NC}\n" "[PASSED]"
  fi

  # gocritic
  # shellcheck disable=SC2046
  printf "${BLUE}${INFO} %-20s" "Executing gocritic"
  gocritic check "${FILE}"
  if [[ $? == 1 ]]; then
    printf "${RED}%50s${NC}\n" "[NOT PASSED]"
    PASS=false
  else
    printf "${GREEN}%50s${NC}\n" "[PASSED]"
  fi

  git add "$FILE"
done

# go mod tidy
printf "\n%s${YELLOW}${INFO} Executing go mod tidy ${NC}\n"
go mod tidy -v

if ! $PASS; then
  printf "\n%s${RED}${CROSS} Commit Failed${NC}\n\n"
  exit 1
else
  printf "\n%s${YELLOW}${INFO} Commit all staged files ${NC}\n\n"
  printf "\n%s${GREEN}${CHECK} Commit Success${NC}\n\n"
fi

exit 0